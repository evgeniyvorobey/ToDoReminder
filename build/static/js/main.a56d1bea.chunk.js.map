{"version":3,"sources":["Components/Input/Input.jsx","Components/List/ListItem.jsx","Components/Form.jsx","Components/Preloader/Preloader.jsx","Components/Preloader/index.js","App.jsx","index.js"],"names":["Input","placeholder","value","name","label","inputType","onChange","className","htmlFor","type","ListItem","state","time","props","setTimer","timerTime","console","log","i","setTimeout","item","parseInt","this","children","onClick","removeItem","index","xmlns","viewBox","d","React","Component","Form","onSubmit","Preloader","Placeholder","cx","cy","r","fill","App","elementsTitle","elementsTime","inputTitle","inputTime","isFetching","date","Date","event","preventDefault","length","setState","prevState","concat","target","arrTitle","arrTime","splice","fetch","then","response","json","result","catch","error","map","itemName","key","style","textAlign","toLocaleString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a56d1bea.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Input({ placeholder, value, name, label, inputType, onChange, className}) {\n\n\n    return(\n        <div className=\"input-container\">\n                { label && (\n                    <label htmlFor=\"\">{label}</label>\n                    )\n                }\n                <input\n                    className={''}\n                    onChange={onChange}\n                    placeholder={placeholder}\n                    type={inputType}\n                    name={name}\n                    value={value}\n                />\n        </div>\n    )\n}\n\nexport default Input;","import React from 'react';\n\nclass ListItem extends React.Component {\n\n\n    state = {\n        time: this.props.time\n    }\n\n    setTimer = () => {\n        let timerTime = +this.props.time * 60;\n        console.log(timerTime)\n        for ( let i = 0; i <= timerTime; i++ ) {\n            setTimeout( item => {\n                console.log(parseInt(item += 1))\n            },1000)\n        }\n    }\n\n\n    render() {\n        return(\n            <div className=\"list-item\"\n            >\n                <div className=\"text\">\n                    {this.props.children}\n                </div>\n                <div className=\"time-to-end\">{this.state.time}</div>\n                <div \n                    onClick={() => this.props.removeItem(this.props.index)} \n                    className=\"button-close\"\n                >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 64 64\">\n                        <path\n                            d=\"M28.941 31.786L.613 60.114a2.014 2.014 0 102.848 2.849l28.541-28.541 28.541 28.541c.394.394.909.59 1.424.59a2.014 2.014 0 001.424-3.439L35.064 31.786 63.41 3.438A2.014 2.014 0 1060.562.589L32.003 29.15 3.441.59A2.015 2.015 0 00.593 3.439l28.348 28.347z\"\n                        />\n                    </svg>\n                </div>\n                <div \n                    className=\"progress-line\"\n                    // style={{animation: `timeLine 1s linear`}}\n                />\n            </div>\n        )\n    }\n}\n\nexport default ListItem;","import React from \"react\";\n\nfunction Form({children, onSubmit}) {\n    return(\n        <form onSubmit={onSubmit}>\n            {children}\n        </form>\n    )\n}\n\nexport default Form;","import React from \"react\";\nimport \"./preloader.scss\";\n\nfunction Preloader() {\n    return (\n        <div className=\"wrapper\">\n            <div className=\"loader-wrapper\">\n                <div className=\"loader-circle\">\n                    <svg className='loader-circle-inner' viewBox='25 25 50 50'>\n                        <circle cx='50' cy='50' r='15' fill='none' className='path' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Preloader;","import Placeholder from \"./Preloader\";\n\nexport default Placeholder;","import React, {Component} from 'react';\nimport Input from './Components/Input/Input';\nimport ListItem from './Components/List/ListItem';\nimport Form from './Components/Form';\nimport Placeholder from './Components/Preloader'\n\nimport './scss/index.scss';\n\nclass App extends Component {\n  \n\tstate = {\n        elementsTitle: [],\n        elementsTime: [],\n        inputTitle: '',\n        inputTime: '',\n        isFetching: false,\n        date: new Date(),\n    }\n\n    componentDidMount() {\n\n        setTimeout(() => {\n            fetch(\"list.json\")\n            .then(response => response.json())\n            .then(result => this.setState({\n                elementsTitle: result['elementsTitle'],\n                elementsTime: result['elementsTime'],\n                isFetching: true,\n            }))\n            .catch( error => {\n                console.log(error)\n                this.setState({\n                    isFetching: false\n                })\n            })\n        },3500)\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n\n        let inputTitle = this.state.inputTitle;\n        let inputTime = this.state.inputTime;\n        let time = +inputTime >= 1 ? inputTime : 0\n\n        inputTitle.length >= 3 && (\n            this.setState( prevState => ({\n                elementsTitle: prevState.elementsTitle.concat(inputTitle),\n                elementsTime: prevState.elementsTime.concat(time),            \n                inputTitle: '',\n                inputTime: ''\n            }))\n        )\n        \n    }\n\n    onChange = event => {\n        event.target.type === 'text' ? (\n            this.setState({\n                inputTitle: event.target.value\n            })\n        ) : ( \n            this.setState({\n                inputTime: event.target.value\n            })\n        )\n    }\n\n    removeItem = index => {\n        let arrTitle = this.state.elementsTitle;\n        let arrTime = this.state.elementsTime;\n\n        arrTitle.splice(index, 1);\n        arrTime.splice(index,1);\n\n        console.log(index)\n        console.log(arrTitle)\n        console.log(arrTime)\n        \n        this.setState({\n            elementsTitle: arrTitle,\n            elementsTime: arrTime\n        })\n    }\n\n    render() {\n        const {date, isFetching} = this.state;\n        return(\n            <div className=\"list\">\n                <div className=\"input-wrap\" >\n                    <Form onSubmit={this.onSubmit} >\n                        <Input \n                            inputType=\"text\"\n                            placeholder=\"Input your item...\"\n                            name=\"Name\"\n                            onChange={this.onChange}\n                            value={this.state.inputTitle}\n                        /> \n                        <Input \n                            inputType=\"number\"\n                            placeholder=\"Time...\"\n                            name=\"time\"\n                            onChange={this.onChange}\n                            value={this.state.inputTime}\n                        />\n                        <Input\n                            inputType=\"submit\"\n                            value=\"Add\"   \n                        />\n                    </Form>\n                </div>\n                { isFetching ? (\n                    this.state.elementsTitle.map((itemName, index) => \n                    <ListItem \n                        key={index}\n                        index={index}\n                        removeItem={this.removeItem}\n                        time={this.state.elementsTime[index]}\n                    >\n                        {itemName} \n                    </ListItem>)\n                ) : <Placeholder /> }\n                \n                    <div style={{textAlign: 'center'}}>\n                    {date.toLocaleString}\n                    </div>\n\n            </div>\n        )\n    }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}